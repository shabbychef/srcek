%!PS-Adobe-2.0
%%Title: agoodart.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Wed Jun  7 09:42:05 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
742 280 M
63 0 V
6157 0 R
-63 0 V
658 280 M
( 1e-12) Rshow
1.000 UL
LTb
742 663 M
31 0 V
6189 0 R
-31 0 V
742 1045 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 1e-10) Rshow
1.000 UL
LTb
742 1428 M
31 0 V
6189 0 R
-31 0 V
742 1811 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 1e-08) Rshow
1.000 UL
LTb
742 2193 M
31 0 V
6189 0 R
-31 0 V
742 2576 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 1e-06) Rshow
1.000 UL
LTb
742 2959 M
31 0 V
6189 0 R
-31 0 V
742 3341 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 1e-04) Rshow
1.000 UL
LTb
742 3724 M
31 0 V
6189 0 R
-31 0 V
742 4107 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 0.01) Rshow
1.000 UL
LTb
742 4489 M
31 0 V
6189 0 R
-31 0 V
742 4872 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 1) Rshow
1.000 UL
LTb
742 280 M
0 63 V
0 4529 R
0 -63 V
742 140 M
( 0) Cshow
1.000 UL
LTb
1779 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 50) Cshow
1.000 UL
LTb
2815 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 100) Cshow
1.000 UL
LTb
3852 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 150) Cshow
1.000 UL
LTb
4889 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 200) Cshow
1.000 UL
LTb
5925 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 250) Cshow
1.000 UL
LTb
6962 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 300) Cshow
1.000 UL
LTb
1.000 UL
LTb
742 280 M
6220 0 V
0 4592 V
-6220 0 V
742 280 L
1.000 UP
1.000 UL
LT4
LTb
6311 4739 M
(blam) Rshow
LT4
6395 4739 M
399 0 V
763 4462 M
20 -38 V
21 -33 V
21 313 V
21 17 V
20 -806 V
887 2847 L
21 695 V
21 966 V
20 211 V
21 -196 V
21 -676 V
21 738 V
20 -73 V
21 -43 V
21 -790 V
20 472 V
21 -768 V
21 1235 V
21 123 V
20 -1917 V
21 -63 V
21 -98 V
21 2200 V
20 -2329 V
21 42 V
21 274 V
21 -213 V
20 -67 V
21 248 V
21 -1308 V
20 202 V
21 1468 V
21 -1009 V
21 738 V
20 -137 V
21 321 V
21 -493 V
21 138 V
20 2030 V
21 -1879 V
21 -480 V
21 108 V
20 222 V
21 -283 V
21 -130 V
20 -480 V
21 931 V
21 25 V
21 -141 V
20 -142 V
21 47 V
21 -145 V
21 119 V
1882 879 L
21 1152 V
21 601 V
21 -156 V
20 344 V
21 -345 V
21 124 V
20 -278 V
21 179 V
21 -315 V
21 289 V
20 -1154 V
21 100 V
21 1436 V
21 204 V
20 -596 V
21 336 V
21 -854 V
21 846 V
20 -1692 V
21 1439 V
21 -479 V
20 555 V
21 104 V
21 -1276 V
21 1133 V
20 1924 V
21 -2258 V
21 486 V
21 -544 V
20 567 V
21 -329 V
21 -563 V
21 756 V
20 -210 V
21 334 V
21 87 V
20 -428 V
21 -228 V
21 -936 V
21 892 V
20 -610 V
21 747 V
21 78 V
21 -473 V
20 1060 V
21 -985 V
21 -148 V
21 -274 V
stroke
2878 1521 M
20 1047 V
21 -211 V
21 -415 V
20 569 V
21 132 V
21 -464 V
21 192 V
20 -65 V
21 -476 V
21 452 V
21 -526 V
20 85 V
21 657 V
21 -805 V
21 1048 V
20 -1122 V
21 1042 V
21 -706 V
20 -163 V
21 932 V
21 -1414 V
21 1557 V
20 -33 V
3375 965 L
21 1321 V
21 -277 V
20 323 V
21 129 V
21 -238 V
21 417 V
20 -1406 V
21 746 V
21 256 V
20 -148 V
21 580 V
21 -197 V
21 -362 V
20 96 V
21 -491 V
21 627 V
21 194 V
20 -131 V
21 387 V
21 -156 V
21 -503 V
20 487 V
21 -319 V
21 -711 V
20 1239 V
21 -545 V
21 -72 V
21 -843 V
20 972 V
21 25 V
21 25 V
4039 878 L
20 1722 V
21 -1006 V
21 931 V
21 -815 V
20 415 V
21 -427 V
21 715 V
20 384 V
21 144 V
21 -607 V
21 138 V
20 369 V
21 -857 V
21 -263 V
21 710 V
20 -28 V
21 14 V
21 243 V
21 -496 V
20 -277 V
21 342 V
21 -435 V
20 152 V
21 674 V
21 -499 V
21 137 V
20 389 V
21 -191 V
21 -65 V
21 -368 V
20 311 V
21 -177 V
21 101 V
21 -54 V
20 -23 V
21 148 V
21 691 V
20 -583 V
21 -69 V
21 -340 V
21 193 V
20 -232 V
21 594 V
4951 527 L
21 1955 V
20 -476 V
21 -673 V
21 560 V
stroke
5034 1893 M
21 573 V
20 -683 V
21 598 V
21 -655 V
20 -811 V
21 1476 V
21 -1103 V
21 1534 V
20 -985 V
21 453 V
21 -9 V
21 -161 V
20 522 V
21 -653 V
21 -51 V
21 53 V
20 713 V
21 -21 V
21 129 V
20 -207 V
21 -1571 V
21 1512 V
21 -192 V
20 269 V
21 71 V
21 10 V
21 -1049 V
20 993 V
21 -174 V
21 454 V
21 -1251 V
20 510 V
21 139 V
21 -293 V
20 225 V
21 -520 V
21 1104 V
5822 809 L
20 1710 V
21 162 V
21 -250 V
21 211 V
20 -978 V
21 12 V
21 804 V
21 -23 V
20 -325 V
21 -911 V
21 502 V
20 1153 V
21 -516 V
21 606 V
21 -1079 V
20 405 V
21 121 V
21 30 V
21 -358 V
20 125 V
21 -7 V
21 -61 V
21 323 V
20 -794 V
21 -220 V
21 679 V
20 683 V
21 -172 V
21 -64 V
21 -960 V
20 1244 V
21 -575 V
21 -61 V
21 -31 V
20 591 V
21 -1023 V
21 550 V
21 439 V
20 -465 V
21 199 V
21 -888 V
20 -106 V
21 910 V
21 73 V
21 248 V
20 -587 V
21 198 V
21 -250 V
21 -100 V
20 328 V
21 -90 V
21 303 V
21 -19 V
20 409 V
21 0 V
1.000 UP
1.000 UL
LT0
825 4704 Crs
846 4721 Crs
949 4719 Crs
1157 4741 Crs
1240 4863 Crs
1571 4768 Crs
1.000 UL
LTb
742 280 M
6220 0 V
0 4592 V
-6220 0 V
742 280 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
